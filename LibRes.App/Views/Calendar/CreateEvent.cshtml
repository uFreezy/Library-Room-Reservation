@model LibRes.App.Models.Calendar.CreateEventModel
@{
    ViewBag.Title = "Create Event";
}
<h2>@ViewBag.Title.</h2>
@using (Html.BeginForm("CreateEvent", "Calendar", FormMethod.Post, new {@class = "form-horizontal", role = "form"}))
{
    <div class="card">
        <div class="card-header card-header-primary card-header-info">
            <h4 class="card-title">Create Event</h4>
            <p class="card-category">Complete the form to create new event reservation.</p>
        </div>
        <div class="card-body">
            @Html.AntiForgeryToken()

            @Html.ValidationSummary("", new {@class = "text-danger"})
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(m => m.EventName, new {@class = "control-label"})
                        @Html.TextBoxFor(m => m.EventName, new {@class = "form-control"})
                        <div>
                            @await Component.InvokeAsync("EventRepeatComponent")
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.BeginHour, new {@class = "control-label"})
                        @Html.EditorFor(m => m.BeginHour, new {htmlAttributes = new {@class = "form-control"}})
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.EndHour, new {@class = "control-label"})
                        @Html.EditorFor(m => m.EndHour, new {htmlAttributes = new {@class = "form-control"}})
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.EventDate, new {@class = "control-label"})
                        @Html.EditorFor(m => m.EventDate, "{0:dd-MM-yyyy}", new {htmlAttributes = new {@class = "form-control"}})
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.MeetingRoomId, new {@class = "control-label"})
                        @Html.DropDownListFor(m => m.MeetingRoomId, (IEnumerable<SelectListItem>) ViewBag.Rooms, "Select a Value", new {@class = "form-control selectpicker"})
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="form-check">
                        <label class="form-check-label">
                            @Html.EditorFor(m => m.IsReoccuring, new {htmlAttributes = new {@class = "form-check-input"}})
                            @Html.DisplayNameFor(m => m.IsReoccuring)
                            <span class="form-check-sign">
                                <span class="check"></span>
                            </span>
                        </label>

                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-check">
                        <label class="form-check-label">
                            @Html.EditorFor(m => m.WantsMultimedia, new {htmlAttributes = new {@class = "form-check-input"}})
                            @Html.DisplayNameFor(m => m.WantsMultimedia)
                            <span class="form-check-sign">
                                <span class="check"></span>
                            </span>
                        </label>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Department, new {@class = "control-label"})
                        @Html.EditorFor(m => m.Department, new {htmlAttributes = new {@class = "form-control"}})
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Description, new {@class = "control-label"})

                        @Html.TextBoxFor(m => m.Description, new {@class = "form-control"})

                    </div>
                </div>
            </div>

        </div>
        <div class="card-footer">
            <input type="submit" class="btn btn-default" value="Create Event"/>
        </div>
    </div>
    <script>
        $('.close').on('click',
            function() {
                $('input[name="IsReoccuring"]').prop("checked", false);
            });

        $('input[name="IsReoccuring"]').on('change',
            function() {
                if ($('input[name="IsReoccuring"]').is(":checked")) {
                    $("#exampleModal").modal("show");
                }
            });

    </script>
}